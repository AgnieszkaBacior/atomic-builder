{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/assets/scripts/components/accordions.js","src/assets/scripts/components/dialogs.js","src/assets/scripts/components/states.js","src/assets/scripts/components/tabPanels.js","src/assets/scripts/main.js","src/assets/scripts/tools/preventNested.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* accordions\n ========================================================================== */\n\nimport preventNested from './../tools/preventNested';\n\nconst closeTab = function (tab, panel) {\n  tab.setAttribute('tabindex', -1);\n  tab.setAttribute('aria-expanded', false);\n  panel.setAttribute('aria-hidden', true);\n};\n\nconst closeTabs = function (currentTab, tabs, panels) {\n  tabs.forEach((tab, index) => {\n    if (tab !== currentTab) {\n      closeTab(tab, panels[index]);\n    }\n  });\n};\n\nconst deselectTab = function (tab) {\n  tab.setAttribute('tabindex', -1);\n  tab.setAttribute('aria-selected', false);\n};\n\nconst deselectTabs = function (tabs) {\n  tabs.forEach((tab) => {\n    deselectTab(tab);\n  });\n};\n\nconst toggleTab = function (tab, panel, { tabs, panels }, { multiselectable }) {\n  if (!multiselectable) {\n    closeTabs(tab, tabs, panels);\n  }\n\n  tab.focus();\n  tab.setAttribute('tabindex', 0);\n  tab.setAttribute('aria-selected', true);\n  tab.setAttribute('aria-expanded', tab.getAttribute('aria-expanded') !== 'true');\n  panel.setAttribute('aria-hidden', panel.getAttribute('aria-hidden') !== 'true');\n};\n\nconst selectTab = function (tab, tabs) {\n  if (tabs) {\n    deselectTabs(tabs);\n    tab.focus();\n  }\n\n  tab.setAttribute('tabindex', 0);\n  tab.setAttribute('aria-selected', true);\n};\n\nexport default function accordion(component, keyCodes) {\n  const tabs = preventNested(component.querySelectorAll('[role=\"tab\"]'), component);\n  const panels = preventNested(component.querySelectorAll('[role=\"tabpanel\"]'), component);\n  const tabPanels = { tabs, panels };\n  const firstTab = tabs[0];\n  const lastTab = tabs[tabs.length - 1];\n  const multiselectable = (component.getAttribute('aria-multiselectable') || 'true') === 'true';\n\n  tabs.forEach((tab, index) => {\n    const prevTab = tabs[index - 1] || lastTab;\n    const nextTab = tabs[index + 1] || firstTab;\n    const panel = document.getElementById(tab.getAttribute('aria-controls'));\n\n    // toggle tab\n    tab.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      toggleTab(tab, panel, tabPanels, { multiselectable });\n    });\n\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.enter || event.which === keyCodes.escape) {\n        event.preventDefault();\n\n        toggleTab(tab, panel, tabPanels, { multiselectable });\n      }\n    });\n\n    // select tab\n    tab.addEventListener('focus', () => {\n      selectTab(tab);\n    });\n\n    // select prev tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.left || event.which === keyCodes.up) {\n        event.preventDefault();\n\n        selectTab(prevTab, tabs);\n      }\n    });\n\n    // select next tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.right || event.which === keyCodes.down) {\n        event.preventDefault();\n\n        selectTab(nextTab, tabs);\n      }\n    });\n\n    // select first tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.home) {\n        event.preventDefault();\n\n        selectTab(firstTab, tabs);\n      }\n    });\n\n    // select last tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.end) {\n        event.preventDefault();\n\n        selectTab(lastTab, tabs);\n      }\n    });\n  });\n}\n","/* dialogs\n ========================================================================== */\n\nconst page = document.querySelector('.js-page');\nconst doc = document.querySelector('.js-document');\n\nconst openDialog = function (component, keyCodes) {\n  const focusableElems = component.querySelectorAll('[href], button, input, select, textarea, [tabindex]:not([tabindex=\"-1\"]');\n  const firstFocusableElem = focusableElems[0];\n  const secondFocusableElem = focusableElems[1];\n  const lastFocusableElem = focusableElems[focusableElems.length - 1];\n\n  component.setAttribute('aria-hidden', false);\n  doc.setAttribute('aria-hidden', true);\n  page.classList.add('is-inactive');\n\n  // return if no focusable element\n  if (!firstFocusableElem) {\n    return;\n  }\n\n  window.setTimeout(() => {\n    if (secondFocusableElem) {\n      secondFocusableElem.focus();\n    } else {\n      firstFocusableElem.focus();\n    }\n\n    // trapping focus inside the dialog\n    focusableElems.forEach((focusableElem) => {\n      if (focusableElem.addEventListener) {\n        focusableElem.addEventListener('keydown', (event) => {\n          const tab = event.which === keyCodes.tab;\n\n          if (!tab) {\n            return;\n          }\n          if (event.shiftKey) {\n            if (event.target === firstFocusableElem) { // shift + tab\n              event.preventDefault();\n\n              lastFocusableElem.focus();\n            }\n          } else if (event.target === lastFocusableElem) { // tab\n            event.preventDefault();\n\n            firstFocusableElem.focus();\n          }\n        });\n      }\n    });\n  }, 100);\n};\n\nconst closeDialog = function (component, src) {\n  const nested = (src.dataset.nested || 'false') === 'true';\n\n  // check if dialog is inside another dialog\n  if (!nested) {\n    doc.setAttribute('aria-hidden', false);\n    page.classList.remove('is-inactive');\n  }\n\n  component.setAttribute('aria-hidden', true);\n\n  // restoring focus\n  src.focus();\n};\n\nexport default function dialog(src, keyCodes) {\n  const component = document.querySelector(`.${src.dataset.target}`);\n  const dismissTargets = component.querySelectorAll('[data-dismiss]');\n  const { overlay } = src.dataset;\n\n  // open dialog\n  src.addEventListener('click', (event) => {\n    event.preventDefault();\n\n    openDialog(component, keyCodes);\n  });\n\n  src.addEventListener('keydown', (event) => {\n    if (event.which === keyCodes.enter) {\n      event.preventDefault();\n\n      openDialog(component, keyCodes);\n    }\n  });\n\n  // close dialog\n  component.addEventListener('keydown', (event) => {\n    if (event.which === keyCodes.escape) {\n      closeDialog(component, src);\n    }\n  });\n\n  dismissTargets.forEach((dismissTarget) => {\n    const target = document.querySelector(`.${dismissTarget.dataset.dismiss}`);\n\n    dismissTarget.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      closeDialog(target, src);\n    });\n    dismissTarget.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.enter) {\n        event.preventDefault();\n\n        closeDialog(target, src);\n      }\n    });\n  });\n\n  window.addEventListener('click', (event) => {\n    if (event.target === component && (!overlay || overlay === 'true')) {\n      closeDialog(component, src);\n    }\n  });\n}\n","/* states\n ========================================================================== */\n\nconst add = 'add';\nconst remove = 'remove';\nconst toggle = 'toggle';\nconst ariaAttributes = [\n  {\n    type: 'aria-hidden',\n    init: true,\n  },\n  {\n    type: 'aria-disabled',\n    init: true,\n  },\n  {\n    type: 'aria-selected',\n    init: false,\n  },\n  {\n    type: 'aria-expanded',\n    init: false,\n  },\n  {\n    type: 'aria-pressed',\n    init: false,\n  },\n  {\n    type: 'aria-checked',\n    init: false,\n  },\n];\n\nconst setClass = function (elem, stateClass, behaviour) {\n  if (stateClass !== 'false') {\n    if (behaviour === add) {\n      elem.classList.add(stateClass);\n    } else if (behaviour === remove) {\n      elem.classList.remove(stateClass);\n    } else {\n      elem.classList.toggle(stateClass);\n    }\n  }\n};\n\nconst setAria = function (elem, behaviour) {\n  ariaAttributes.forEach((ariaAttribute) => {\n    const { type, init } = ariaAttribute;\n\n    if (elem.hasAttribute(type)) {\n      if (behaviour === add) {\n        elem.setAttribute(type, !init);\n      } else if (behaviour === remove) {\n        elem.setAttribute(type, init);\n      } else {\n        elem.setAttribute(type, elem.getAttribute(type) !== 'true');\n      }\n    }\n  });\n};\n\nconst setTabindex = function (elem, tabindex, behaviour) {\n  if (tabindex === 'true') {\n    if (behaviour === add) {\n      elem.setAttribute('tabindex', 0);\n    } else if (behaviour === remove) {\n      elem.setAttribute('tabindex', -1);\n    } else {\n      elem.setAttribute('tabindex', elem.getAttribute('tabindex') === '-1' ? 0 : -1);\n    }\n  }\n};\n\nconst setState = function (parameters) {\n  parameters.behaviours.forEach((behaviour, index) => {\n    const elems = document.querySelectorAll(`.${parameters.targets[index]}`);\n    const stateClass = parameters.states[index];\n    const tabindex = parameters.tabindexes !== null ? parameters.tabindexes[index] : null;\n\n    elems.forEach((elem) => {\n      if (behaviour === add) {\n        setClass(elem, stateClass, add);\n        setAria(elem, add);\n        setTabindex(elem, tabindex, add);\n      } else if (behaviour === remove) {\n        setClass(elem, stateClass, remove);\n        setAria(elem, remove);\n        setTabindex(elem, tabindex, remove);\n      } else {\n        setClass(elem, stateClass, toggle);\n        setAria(elem, toggle);\n        setTabindex(elem, tabindex, toggle);\n      }\n    });\n  });\n};\n\nexport default function state(elem, keyCodes) {\n  const parameters = {\n    behaviours: elem.dataset.behaviour.split(', '),\n    states: elem.dataset.state.split(', '),\n    tabindexes: elem.dataset.tabindex ? elem.dataset.tabindex.split(', ') : null,\n    targets: elem.dataset.target.split(', '),\n  };\n\n  elem.addEventListener('click', (event) => {\n    event.preventDefault();\n\n    setState(parameters);\n  });\n  elem.addEventListener('keydown', (event) => {\n    if (event.which === keyCodes.enter) {\n      event.preventDefault();\n\n      setState(parameters);\n    }\n  });\n}\n","/* tab panels\n ========================================================================== */\n\nimport preventNested from './../tools/preventNested';\n\nconst closeTab = function (tab, panel) {\n  tab.setAttribute('tabindex', -1);\n  tab.setAttribute('aria-selected', false);\n  panel.setAttribute('aria-hidden', true);\n};\n\nconst closeTabs = function (tabs, panels) {\n  tabs.forEach((tab, index) => {\n    closeTab(tab, panels[index]);\n  });\n};\n\nconst openTab = function (tab, panel, { tabs, panels }) {\n  closeTabs(tabs, panels);\n\n  tab.focus();\n  tab.setAttribute('tabindex', 0);\n  tab.setAttribute('aria-selected', true);\n  panel.setAttribute('aria-hidden', false);\n};\n\nexport default function tabPanel(component, keyCodes) {\n  const tabs = preventNested(component.querySelectorAll('[role=\"tab\"]'), component);\n  const panels = preventNested(component.querySelectorAll('[role=\"tabpanel\"]'), component);\n  const tabPanels = { tabs, panels };\n  const firstTab = tabs[0];\n  const lastTab = tabs[tabs.length - 1];\n  const firstPanel = document.getElementById(firstTab.getAttribute('aria-controls'));\n  const lastPanel = document.getElementById(lastTab.getAttribute('aria-controls'));\n\n  tabs.forEach((tab, index) => {\n    const prevTab = tabs[index - 1] || lastTab;\n    const nextTab = tabs[index + 1] || firstTab;\n    const panel = document.getElementById(tab.getAttribute('aria-controls'));\n    const prevPanel = document.getElementById(prevTab.getAttribute('aria-controls'));\n    const nextPanel = document.getElementById(nextTab.getAttribute('aria-controls'));\n\n    // open tab\n    tab.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      openTab(tab, panel, tabPanels);\n    });\n\n    // open prev tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.left || event.which === keyCodes.up) {\n        event.preventDefault();\n\n        openTab(prevTab, prevPanel, tabPanels);\n      }\n    });\n\n    // open next tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.right || event.which === keyCodes.down) {\n        event.preventDefault();\n\n        openTab(nextTab, nextPanel, tabPanels);\n      }\n    });\n\n    // open first tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.home) {\n        event.preventDefault();\n\n        openTab(firstTab, firstPanel, tabPanels);\n      }\n    });\n\n    // open last tab\n    tab.addEventListener('keydown', (event) => {\n      if (event.which === keyCodes.end) {\n        event.preventDefault();\n\n        openTab(lastTab, lastPanel, tabPanels);\n      }\n    });\n  });\n}\n","/* main\n ========================================================================== */\n\nimport state from './components/states';\nimport dialog from './components/dialogs';\nimport tabPanel from './components/tabPanels';\nimport accordion from './components/accordions';\n\nconst keyCodes = {\n  tab: 9,\n  enter: 13,\n  escape: 27,\n  end: 35,\n  home: 36,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\n\nconst testComponentType = function (component) {\n  const dataComponent = component.dataset.component;\n\n  if (dataComponent === 'state') {\n    state(component, keyCodes);\n  }\n  if (dataComponent === 'dialog') {\n    dialog(component, keyCodes);\n  }\n  if (dataComponent === 'tab') {\n    tabPanel(component, keyCodes);\n  }\n  if (dataComponent === 'accordion') {\n    accordion(component, keyCodes);\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const components = document.querySelectorAll('[data-component]');\n\n  components.forEach((component) => {\n    testComponentType(component);\n  });\n\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((component) => {\n        if (typeof component.getAttribute === 'function') {\n          if (component.getAttribute('data-component')) {\n            testComponentType(component);\n          }\n        }\n      });\n    });\n  });\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n  });\n});\n","/* prevent nested\n ========================================================================== */\n\nexport default function preventNested(selectors, component) {\n  const elems = [];\n\n  selectors.forEach((selector) => {\n    let parent = selector.parentNode;\n\n    while (parent !== component) {\n      if (parent.dataset.component === component.dataset.component) {\n        return;\n      }\n      parent = parent.parentNode;\n    }\n    elems.push(selector);\n  });\n\n  return elems;\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
/* functions
   ========================================================================== */

// decimal round
@function decimal-round($number, $digits: 4) {
    $n: 1;
    @for $i from 1 through $digits {
        $n: $n * 10;
    }
    @if round($number * 10) == $number * 10 {
        @return $number;
    }
    @return ceil($number * $n) / $n;
}

// line height
@function line-height($font-size, $vertical-rythm: $base-font-size * $line-height) {
    $coeff: 1;
    $line-height-coeff: $vertical-rythm / $font-size;
    @while $line-height-coeff < 1 {
        $coeff: $coeff + 1;
        $line-height-coeff: $vertical-rythm * $coeff / $font-size;
    }
    @return decimal-round($line-height-coeff);
}

// gcd
@function gcd($numerator, $denominator) {
    @while $numerator != 0 {
        $i: $numerator;
        $numerator: $denominator % $numerator;
        $denominator: $i;
    }
    @return $denominator;
}

// column width
@function column-width($number) {
    $column: ($wrapper - $gutter * ($columns - 1)) / $columns;
    $column-width: $column * $number + $gutter * ($number - 1);
    @return decimal-round($column-width);
}

// str perfix
@function str-prefix($string) {
    $new-string: str-slice($string, 1, 1);
    @return $new-string;
}

/* mixins
   ========================================================================== */

// font rythm
@mixin font-rythm($font-size, $font-family: null, $font-weight: null, $font-style: null) {
    @if $font-family {
        font-family: $font-family;
    }
    @if $font-weight {
        font-weight: $font-weight;
    }
    @if $font-style {
        font-style: $font-style;
    }
    font-size: $font-size;
    line-height: line-height($font-size);
}

// grid childs
@mixin grid-childs($number: null, $modifier: null, $gutter: $gutter, $start: 2, $end: $columns) {
    @if $modifier {
        $modifier: $modifier + "-";
    }
    @if $number {
        $start: $number;
        $end: $number;
    }
    @for $i from $start through $end {
        @if $columns % $i == 0 or $start == $end {
            .grid--#{$modifier}#{$i} {
                & > .grid__item {
                    width: calc(#{decimal-round(100% / $i)} - #{$gutter});
                }
            }
        }
    }
}

// grid uneven childs
@mixin grid-uneven-childs($modifier: null, $gutter: $gutter, $start: 1, $end: ($columns / 2) - 1) {
    @if $modifier {
        $modifier: $modifier + "-";
    }
    @for $i from $start through $end {
        $gcd: gcd($i, $columns);
        .grid--#{$modifier}#{$i / $gcd}-#{$columns / $gcd} {
            & > *:nth-child(odd) {
                width: calc(#{decimal-round(percentage($i / $columns))} - #{$gutter});
            }
            & > *:nth-child(even) {
                width: calc(#{decimal-round(percentage(($columns - $i) / $columns))} - #{$gutter});
            }
        }
        .grid--#{$modifier}#{$columns / $gcd - $i / $gcd}-#{$columns / $gcd} {
            & > *:nth-child(odd) {
                width: calc(#{decimal-round(percentage(($columns - $i) / $columns))} - #{$gutter});
            }
            & > *:nth-child(even) {
                width: calc(#{decimal-round(percentage($i / $columns))} - #{$gutter});
            }
        }
    }
}

// padding rythm
@mixin padding-rythm($font-size, $height: $field-height) {
    $padding: decimal-round(($height - line-height($font-size) * $font-size) / 2);
    @if $padding < 0 {
        padding: 0 $small-value;
    }
    @else {
        padding: $padding $small-value;
    }
}

// percentage width
@mixin percentage-width($step: 10, $start: 1, $end: 100) {
    @for $i from $start through $end {
        @if $i == 33 {
            .w#{$i} {
                width: 33.3334 + %;
            }
        }
        @else if $i == 66 {
            .w#{$i} {
                width: 66.6667 + %;
            }
        }
        @else if $i % $step == 0 or $i == 25 or $i == 75 {
            .w#{$i} {
                width: $i + %;
            }
        }
    }
}

// fixed width col
@mixin fixed-width-col($number: null, $start: 1, $end: $columns) {
    @if $number {
        $start: $number;
        $end: $number;
    }
    @for $i from $start through $end {
        .w#{$i}col {
            width: column-width($i);
        }
    }
}

// spacing helpers
@mixin spacing-helpers($property...) {
    $values: ($small-value: "s", $medium-value: "m", $large-value: "l");
    $properties: $property;
    @each $property in $properties {
        .#{str-prefix($property)}an {
            #{$property}: 0;
        }
        .#{str-prefix($property)}tn {
            #{$property}-top: 0;
        }
        .#{str-prefix($property)}rn {
            #{$property}-right: 0;
        }
        .#{str-prefix($property)}bn {
            #{$property}-bottom: 0;
        }
        .#{str-prefix($property)}ln {
            #{$property}-left: 0;
        }
        @each $value in $values {
            .#{str-prefix($property)}t#{nth($value, 2)} {
                #{$property}-top: nth($value, 1);
            }
            .#{str-prefix($property)}r#{nth($value, 2)} {
                #{$property}-right: nth($value, 1);
            }
            .#{str-prefix($property)}b#{nth($value, 2)} {
                #{$property}-bottom: nth($value, 1);
            }
            .#{str-prefix($property)}l#{nth($value, 2)} {
                #{$property}-left: nth($value, 1);
            }
        }
    }
}

// responsive modules
@mixin responsive-modules($label) {

    // layouts for #{$label} screens
    .#{$label}-hidden {
        display: none !important;
    }
    .#{$label}-visible {
        display: block !important;
    }
    .#{$label}-no-float {
        float: none;
    }
    .#{$label}-inbl {
        display: inline-block;
        float: none;
        vertical-align: top;
    }
    @if $label == "tiny" {
        th,
        td {
            display: block;
            width: auto;
            text-align: left;
        }
        thead {
            display: none;
        }
    }

    // widths for #{$label} screens
    .#{$label}-w100,
    .#{$label}-wauto {
        display: block !important;
        float: none !important;
        clear: none !important;
        width: auto !important;
        margin-left: 0 !important;
        margin-right: 0 !important;
        border: 0;
    }

    // margins for #{$label} screens
    .#{$label}-man {
        margin: 0 !important;
    }
}
